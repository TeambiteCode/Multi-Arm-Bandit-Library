import matplotlib.pyplot as plt
import numpy as np
from Multi_arm_bandit_algorithms.Baysian_optimization.Explore_exploit_tradeoff import Explore_exploit_tradeoff

def f(x):

    return -(x-4)**2



noise = 0.1
x = [-80, -30, 42]
y = [np.random.normal(f(i), noise) for i in x]


for i in range(25):
    x_, value, y_= Explore_exploit_tradeoff(x, y, upper_bound=50, lower_bound=-100, tradeoff_factor=1, noise=noise, return_aqs=True, max_iter=30)



    x.append(x_)
    x.sort()
    y = [np.random.normal(f(i), noise) for i in x]


    fig, arr = plt.subplots(2, sharex=True)

    arr[0].plot(np.linspace(-100, 50, 50), value)
    arr[0].set_title("Aqusition Function")
    arr[1].plot(x, y, 'ro')
    arr[0].plot(x_, y_, 'g*')
    fig.savefig(str(i))
    plt.close(fig)

    print(x_)
